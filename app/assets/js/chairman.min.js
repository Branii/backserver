
// chairman custom
var el = document.querySelector(".chrome-tabs");
var chromeTabs = new ChromeTabs();
chromeTabs.init(el);
$(".home").show();
TabArray = [];
TabMap = new Map();
let contentEl;

el.addEventListener("activeTabChange", ({ detail }) =>
  onTabChanged(detail.tabEl)
);
el.addEventListener("tabAdd", ({ detail }) =>
  addTabStyle(contentEl, detail.tabEl)
);
el.addEventListener("tabRemove", ({ detail }) => closeTab(detail.tabEl));

function addTabStyle(contentEl, elem) {
  TabMap.set(contentEl, elem);
  $(".chrome-tab-drag-handle").removeClass("chromclass");
  $(elem).find(".chrome-tab-drag-handle").addClass("chromclass");
}

function closeTab(elem) {
  let tabName = $(elem).find(".chrome-tab-holder").text().trim();
  TabArray = TabArray.filter((item) => item !== tabName);
}

function onTabChanged(elem) {
  let tabContent = $(elem).find(".chrome-tab-holder").text().trim();
  $(".chrome-tab-drag-handle").removeClass("chromclass");
  $(elem).find(".chrome-tab-drag-handle").addClass("chromclass");
  $(".chrome__tab").hide();
  $("." + tabContent).show();
  applyCustomScrollbarsToTabs();
}

function addnewTab(tabName, tabContent) {
  if (TabArray.includes(tabContent)) {
    $(".chrome__tab").hide();
    $("." + tabContent).show();
    $(".chrome-tab").removeClass("active");
    chromeTabs.setCurrentTab(TabMap.get(tabContent));
    return;
  } else {
    contentEl = tabContent;
    chromeTabs.addTab({
      title: tabName,
      favicon: false,
      content: tabContent,
    });
    $(".chrome__tab").hide();
    $("." + tabContent).show();
    TabArray.push(tabContent);

  }
}

function applyCustomScrollbarsToTabs() {
  const tableWrappers = document.querySelectorAll('.table-wrapper');
  tableWrappers.forEach(wrapper => {
      wrapper.style.overflow = 'auto'; // Ensure the overflow is set
      wrapper.scrollTop = 0; // Reset scroll position if needed
      wrapper.scrollLeft = 0;
  });
}

$(document).on("click",".tab-button",function () {
    const partnerName = $("#partner-holder").val();
    $(".partner-name").text(partnerName);
    addnewTab($(this).text().trim(), $(this).attr("value"));
    applyCustomScrollbarsToTabs();
});

// the scroll fn
function scrollTable(direction) {
  const tableWrapper = document.querySelector(".table-wrapper");
  const scrollAmount = 500; // Adjust
  tableWrapper.scrollBy({
    left: direction === 'left' ? -scrollAmount : scrollAmount,
    behavior: 'smooth'
  });
}

function savePinnedToLocalStorage(title, holder) {
  let items = JSON.parse(localStorage.getItem('pinned')) || [];
  const isDuplicate = items.some(item => item.title === title);
  if (!isDuplicate) {
    const newItem = { title, holder };
    items.push(newItem);
    localStorage.setItem('pinned', JSON.stringify(items));
} else {
    console.log('Tab is already pinned');
}
}

function removeFromLocalStorage(title, holder) {
  let items = JSON.parse(localStorage.getItem('pinned')) || [];
  items = items.filter(item => item.title !== title || item.holder !== holder);
  localStorage.setItem('pinned', JSON.stringify(items));
}

function getFromLocalStorage() {
  return JSON.parse(localStorage.getItem('pinned')) || [];
}

const items = getFromLocalStorage();
window.onload = function () {
  const items = getFromLocalStorage();

  if (items.length > 0) {
    async function run() {
      for (const item of items) {
        addnewTab(item.title.trim(), item.holder.trim());
        applyCustomScrollbarsToTabs();
        $(".chrome-tab-holder")
          .siblings(".chrome-tab-close")
          .removeClass("chrome-tab-close")
          .addClass("bx bxs-pin");

        await new Promise(resolve => setTimeout(resolve, 0)); // Sleep 1 sec
      }
    }

    run();
  }
};

let elem = "";
var menu = new BootstrapMenu(".chrome-tab", {
    fetchElementData: function (element) {
        elem = element;
    },
    actions: [
        {
            name: "<div class='pins'><i class='bx bxs-pin' style='font-size:15px;' ></i> <span style='font-size:12px'>Pin Tab</span></div>",
            onClick: function () {
                $(elem[0]).find(".chrome-tab-close").removeClass("chrome-tab-close").addClass("bx bxs-pin");
                savePinnedToLocalStorage($(elem[0]).find(".chrome-tab-title").text(), $(elem[0]).find(".chrome-tab-holder").text())
                console.log("pinned to local storage");
              
            },
        },
        {
            name: "<div class='pins'><i class='bx bx-pin' style='font-size:15px;' ></i> <span style='font-size:12px'>Unpin Tab</span></div>",
            onClick: function () {
                $(elem[0]).find(".bxs-pin").removeClass("bx bxs-pin").addClass("chrome-tab-close");
                removeFromLocalStorage($(elem[0]).find(".chrome-tab-title").text(), $(elem[0]).find(".chrome-tab-holder").text())
                console.log("Unpinned");
            },
        },
        {
            name: "<div class='pins'><i class='bx bx-checkbox-minus' style='font-size:15px;' ></i> <span style='font-size:12px'>More Options</span></div>",
            onClick: function () {
                // $(elem[0]).find(".chrome-tab-close").removeClass("chrome-tab-close")
            },
        },
    ],
});


// $(document).on("click",".addup", function (){
//     alert("Add up modal open")
// })

