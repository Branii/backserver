<?php
session_start();
error_reporting(E_ALL);
ini_set('display_errors', 1);
isset($_SESSION['lang']) ? $_SESSION['lang'] : $_SESSION['lang'] = 'en';
$lang = $_SESSION['lang'];

$translator = [
    'Bet' => ($lang == 'ch') ? '投注' : 'Bet',
    'Win' => ($lang == 'ch') ? '中奖' : 'Win',
    'Track' => ($lang == 'ch') ? '追踪 ' : 'Track',
    'Lost' => ($lang == 'ch') ? '输 ' : 'Lost',
    'Pending' => ($lang == 'ch') ? '等待结果' : 'Pending',
    'Bet Cancelled' => ($lang == 'ch') ? '投注已取消' : 'Bet Cancelled',
    'Refund' => ($lang == 'ch') ? '款' : 'Refund',
    'Standard' =>($lang == 'ch') ? '标准':'Standard',
    'Fantan' => ($lang == 'ch') ?'番摊':'Fantan' ,
    'Trend' =>($lang == 'ch') ?'趋势':'Trend',
    'Board Games'=>($lang == 'ch') ?'棋盘游戏':'Board Games',
    'Many Tables' =>($lang == 'ch') ?'多张桌子':'Many Tables',
    'Long Dragon' =>($lang == 'ch') ?'长龙':'Long Dragon',
    'Road Bets' =>($lang == 'ch') ? '道路投注':'Road Bets',
    'Two Sides' =>($lang == 'ch') ?'双边模式':'Two Sides',
];

$flag = isset($this->viewData['flag']) ? $this->viewData['flag'] : null;

if ($flag == "searchusername") {
    $username = isset($this->viewData['username']) ? $this->viewData['username'] : '';
    $result = (new BusinessFlowModel())->Searchusername($username);

    $results = [];
    foreach ($result as $value) {
        // Add each item as an associative array with 'uid', 'username', and 'nickname'
        $data = [
            'uid' => $value['uid'], // 'uid' is the key
            'username' => $value['username'], // 'username' value
            'email' => $value['email'],
            'contact' => $value['contact'], // 'nickname' value
            'regtype' => $value['reg_type'], // 'nickname' value
        ];
        $results[] = $data; // Append the formatted result to the $results array
    }

    if ($result) {
        echo json_encode($results);
    } else {
        echo json_encode([['username' => '', 'empty' => true]]);
    }
}

//trasanction data
if ($flag == "transactiondata") {
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = (new BusinessFlowModel())->FetchTransactionData($page, $limit) ?? [];
    echo json_encode([
        'transaction' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}

if ($flag == "getTransactionBet") {
    $transactionId = isset($this->viewData['transactionId']) ? $this->viewData['transactionId'] : null;

    $data = explode("_", $transactionId);
    $validTypes = [1, 4, 9, 10];
    if (in_array($data[2], $validTypes)) {
        $fetchredevelope = (new BusinessFlowModel())->ViewRedEvenlopes($data[0])[0];
        $fetchdeposit = (new BusinessFlowModel())->ViewDeposite($data[0])[0];
        $userData = (new BusinessFlowModel())->getUsernameById($fetchredevelope['uid']);
        if ($userData['reg_type'] == 'username') {
            $username = $userData['username'];
        } elseif ($userData['reg_type'] == 'contact') {
            $username = $userData['contact'];
        } else {
            $username = $userData['email'];
        }
        $response = [
            'redEnvelope' => $fetchredevelope,
            'deposit' => $fetchdeposit,
            'usernames' => $username,
        ];
        echo json_encode($response);
        exit();
    }

    $betTable = (new BusinessFlowModel())->getTables()[$data[1]]['bet_table'];
    $drawTable = (new BusinessFlowModel())->getTables()[$data[1]]['draw_table'];
    $result = (new BusinessFlowModel())->getBetDataByTransactionBet($betTable, $data[0])[0] ?? [];
    $close_and_opentimes = (new BusinessFlowModel())->getOpenAndCloseTimesByPeriod($result['bet_period'], $drawTable)[0] ?? [];
    $userData = (new BusinessFlowModel())->getUsernameById($result['uid']);
    $lotteryname = (new BusinessFlowModel())->getLottery($result['game_type'])['name'];
    if ($userData['reg_type'] == 'username') {
        $username = ucfirst(trim($userData['username']));
    } elseif ($userData['reg_type'] == 'contact') {
        $username = $userData['contact'];
    } else {
        $username = ucfirst(trim($userData['email']));
    }
    $result['bet_amount'] = $result['bet_amount'];
    $betStatusMap = [2 => $translator['Win'], 3 => $translator['Lost'], 5 => $translator['Pending'], 6 => $translator['Bet Cancelled'], 7 => $translator['Refund']];
    $betState = [1 => 'Settled ', 2 => 'Unsettled ', 4 => 'Bet Cancelled', 7 => 'Refund'];
    $gamemodel = [1 => $translator['Standard'], 2 => $translator['Two Sides'], 4 => $translator['Long Dragon'], 5 => $translator['Many Tables'], 6 => $translator['Board Games'], 3 => $translator['Long Dragon'], 7 =>$translator['Fantan'],8 => $translator['Trend']];
    $result['bettype'] = $result['bettype'] == 2 ? $translator['Track'] : ($result['bettype'] == 1 ? $translator['Bet'] : '');
    $result['bet_status'] = isset($betStatusMap[$result['bet_status']]) ? $betStatusMap[$result['bet_status']] : 'unknown';
    $result['state'] = isset($betState[$result['state']]) ? $betState[$result['state']] : 'unknown';
    $result['rebate_amount'] = empty($result['rebate_amount']) ? "0" : $result['rebate_amount'];
    $result['game_type'] = $lotteryname;
    $result['reg_type'] = $username;
    $result['opening_time'] = str_replace(" ", " / ", $close_and_opentimes['opening_time'] ?? $translator['Pending']);
    $result['closing_time'] = $close_and_opentimes['closing_time'] ?? $translator['Pending'];
    $result['game_model'] = isset($gamemodel[$result['game_model']]) ? $gamemodel[$result['game_model']] : 'unknown';
    $result['draw_number'] = $result['draw_number'] ?? $translator['Pending'];

    echo json_encode($result);
}

if ($flag == "filtertransactions") {

    $uid  = isset($this->viewData['username']) ? $this->viewData['username'] : '';
    $orderid = isset($this->viewData['orderid']) ? $this->viewData['orderid'] : '';
    $ordertype = isset($this->viewData['ordertype']) ? $this->viewData['ordertype'] : '';
    $startdate = isset($this->viewData['startdate']) ? $this->viewData['startdate'] : '';
    $enddate = isset($this->viewData['enddate']) ? $this->viewData['enddate'] : '';
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $usernameCheck = (new BusinessFlowModel())->getUserIdByUsername($uid);
    $username = !empty($usernameCheck) ? $usernameCheck[0]['uid'] : $uid;
    $sunquery = (new BusinessFlowModel())->FilterTrsansactionDataSubQuery($username, $orderid, $ordertype, $startdate, $enddate);
    $result   = (new BusinessFlowModel())->FilterTrsansactionData($sunquery, $page, $limit) ?? [];

    $response = [
        'response' => "success",
        'transactions' => $result['data'] ?? [],
        'totalPages' => !empty($result['total']) ? ceil($result['total'] / $limit) : 0,
    ];

    echo json_encode($response);
}

//lottery data
if ($flag == "lotterydata") {
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = (new BusinessFlowModel())->fetchBetRecords($page, $limit) ?? [];
    echo json_encode([
        'lotterybet' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}

if ($flag == "viewBetstake") {
    $betcode = isset($this->viewData['betcode']) ? $this->viewData['betcode'] : null;
    $data = explode("_", $betcode);
    $betTable = (new BusinessFlowModel())->getTables()[$data[1]]['bet_table'];
    $drawTable = (new BusinessFlowModel())->getTables()[$data[1]]['draw_table'];
    $result = (new BusinessFlowModel())->getBetDataByTransactionBet($betTable, $data[0])[0] ?? [];
    $close_and_opentimes = (new BusinessFlowModel())->getOpenAndCloseTimesByPeriod($result['bet_period'], $drawTable)[0] ?? [];
    $userData = (new BusinessFlowModel())->getUsernameById($result['uid']);
    if ($userData['reg_type'] == 'username') {
        $username = $userData['username'];
    } elseif ($userData['reg_type'] == 'contact') {
        $username = $userData['contact'];
    } else {
        $username = $userData['email'];
    }
    // Assign the determined value to the reg_type field
    $lotteryname = (new BusinessFlowModel())->getLottery($result['game_type'])['name'];
    //$betStatusMap = [2 => 'Win', 3 => 'Lost', 5 => 'Pending', 6 => 'Bet Cancelled', 7 => 'Refund'];
    $betStatusMap = [2 => $translator['Win'], 3 => $translator['Lost'], 5 => $translator['Pending'], 6 => $translator['Bet Cancelled'], 7 => $translator['Refund']];
    $betState = [1 => 'Settled ', 2 => 'Unsettled ', 4 => 'Bet Cancelled', 7 => 'Refund'];
    $gamemodel = [1 => $translator['Standard'], 2 => $translator['Two Sides'], 4 => $translator['Long Dragon'], 5 => $translator['Many Tables'], 6 => $translator['Board Games'], 3 => $translator['Long Dragon'], 7 =>$translator['Fantan'],8 => $translator['Trend']];
    $datta = json_decode($result['bet_odds'], true); // Decode JSON
    $betodds = reset($datta) * $result['multiplier'] * $result['unit_stake'];
    $result['reg_type'] = $username;
    $result['bet_amount'] = $result['bet_amount'];
    $result['rebate_amount'] = empty($result['rebate_amount']) ? "0" : $result['rebate_amount'];
    $result['opening_time'] = str_replace(" ", " / ", $close_and_opentimes['opening_time'] ?? $translator['Pending']);
    $result['closing_time'] = $close_and_opentimes['closing_time'] ?? $translator['Pending'];
    $result['bettype'] = $result['bettype'] == 2 ? $translator['Track'] : ($result['bettype'] == 1 ? $translator['Bet'] : '');
    $result['bet_status'] = isset($betStatusMap[$result['bet_status']]) ? $betStatusMap[$result['bet_status']] : 'unknown';
    $result['game_model'] = isset($gamemodel[$result['game_model']]) ? $gamemodel[$result['game_model']] : 'unknown';
    $result['state'] = isset($betState[$result['state']]) ? $betState[$result['state']] : 'unknown';
    $result['game_type'] = $lotteryname;
    $result['bet_odds'] = $betodds;
    $result['draw_number'] = $result['draw_number'] ?? $translator['Pending'];

    echo json_encode($result);
}

if ($flag == "fetchLotteryname") {
    $result = (new BusinessFlowModel())->fetchLotteryname();
    echo json_encode($result);
}

if ($flag == "filterbetdata") {
    $uid = isset($this->viewData['uid']) ? $this->viewData['uid'] : '';
    $betOrderID = isset($this->viewData['betOrderID']) ? $this->viewData['betOrderID'] : '';
    $usernameCheck = (new BusinessFlowModel())->getUserIdByUsername($uid);
    $gametype = isset($this->viewData['gametype']) ? $this->viewData['gametype'] : '';
    $betstate = isset($this->viewData['betstate']) ? $this->viewData['betstate'] : '';
    $betstatus = isset($this->viewData['betstatus']) ? $this->viewData['betstatus'] : '';
    $enddate = isset($this->viewData['enddate']) ? $this->viewData['enddate'] : '';
    $startdate = isset($this->viewData['startdate']) ? $this->viewData['startdate'] : '';
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $usernameCheck = (new BusinessFlowModel())->getUserIdByUsername($uid);
    $username = !empty($usernameCheck) ? $usernameCheck[0]['uid'] : $uid;
    $result = (new BusinessFlowModel())->getAllUserBetByUserId($username, $betOrderID, $gametype, $betstate, $betstatus, $enddate, $startdate, $page, $limit);
    echo json_encode([
        'filterbet' =>  $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}

//track data
if ($flag == "trackdatas") {
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = (new BusinessFlowModel())->fetchTrackRecords($page, $limit) ?? [];

    echo json_encode([
        'trackbet' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}

if ($flag == "filterTrack") {
    $uid = isset($this->viewData['username']) ? $this->viewData['username'] : '';
    $trackstatus = isset($this->viewData['trackstatus']) ? $this->viewData['trackstatus'] : '';
    $trackcode = isset($this->viewData['trackcode']) ? $this->viewData['trackcode'] : '';
    $tracklotery = isset($this->viewData['tracklotery']) ? $this->viewData['tracklotery'] : '';
    $enddate = isset($this->viewData['enddate']) ? $this->viewData['enddate'] : '';
    $startdate = isset($this->viewData['startdate']) ? $this->viewData['startdate'] : '';
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;

    $usernameCheck = (new BusinessFlowModel())->getUserIdByUsername($uid);
    $username = !empty($usernameCheck) ? $usernameCheck[0]['uid'] : $uid;
    $subquery = (new BusinessFlowModel())->FilterSubQuery($username, $trackstatus, $trackcode, $tracklotery, $enddate, $startdate);
    $result = (new BusinessFlowModel())->FilterTrackData($subquery, $page, $limit);

    echo json_encode([
        'trackfilter' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}

if ($flag == 'getTrackbet') {
    $token = isset($this->viewData['token']) ? $this->viewData['token'] : null;
    $data = explode("_", $token);
    $betTable = (new BusinessFlowModel())->getTables()[$data[1]]['bet_table'];
    $drawTable = (new BusinessFlowModel())->getTables()[$data[1]]['draw_table'];
    $result = (new BusinessFlowModel())->getTrackData($betTable, $data[0])[0] ?? [];
    $close_and_opentimes = (new BusinessFlowModel())->getOpenAndCloseTimesByPeriod($result['bet_period'], $drawTable)[0] ?? [];
    $userData = (new BusinessFlowModel())->getUsernameById($result['uid']);
    if ($userData['reg_type'] == 'username') {
        $username = $userData['username'];
    } elseif ($userData['reg_type'] == 'contact') {
        $username = $userData['contact'];
    } else {
        $username = $userData['email'];
    }
    // // Assign the determined value to the reg_type field

    $lotteryname = (new BusinessFlowModel())->getLottery($result['game_type'])['name'];
    // $betStatusMap = [2 => 'Win', 3 => 'Lost', 5 => 'Pending', 6 => 'Bet Cancelled', 7 => 'Refund'];
    $betStatusMap = [2 => $translator['Win'], 3 => $translator['Lost'], 5 => $translator['Pending'], 6 => $translator['Bet Cancelled'], 7 => $translator['Refund']];
    $betState = [1 => 'Settled ', 2 => 'Unsettled ', 4 => 'Bet Cancelled', 7 => 'Refund'];
    $gamemodel = [1 => $translator['Standard'], 2 => $translator['Two Sides'], 4 => $translator['Long Dragon'], 5 => $translator['Many Tables'], 6 => $translator['Board Games'], 3 => $translator['Long Dragon'], 7 =>$translator['Fantan'],8 => $translator['Trend']];
    // $datta = json_decode($result['bet_odds'], true); // Decode JSON
    // $betodds = reset($datta) * $result['multiplier'] * $result['unit_stake'];
    $result['opening_time'] = str_replace(" ", " / ", $close_and_opentimes['opening_time'] ?? $translator['Pending']);
    $result['closing_time'] = $close_and_opentimes['closing_time'] ?? $translator['Pending'];
    $result['reg_type'] = ucfirst(trim($username));
    $result['bet_amount'] = $result['bet_amount'];
    $result['rebate_amount'] = empty($result['rebate_amount']) ? "0" : $result['rebate_amount'];
    $result['bettype'] = $result['bettype'] == 2 ? $translator['Track']  : ($result['bettype'] == 1 ? $translator['Bet'] : '');
    $result['bet_status'] = isset($betStatusMap[$result['bet_status']]) ? $betStatusMap[$result['bet_status']] : 'unknown';
    $result['state'] = isset($betState[$result['state']]) ? $betState[$result['state']] : 'unknown';
    $result['game_type'] = $lotteryname;
    $result['game_model'] = isset($gamemodel[$result['game_model']]) ? $gamemodel[$result['game_model']] : 'unknown';
    $result['draw_number'] = $result['draw_number'] ?? $translator['Pending'];
    // $result['bet_odds'] = $betodds;

    echo json_encode($result);
}

if ($flag == 'getTracktokenbet') {
    $token = isset($this->viewData['token']) ? $this->viewData['token'] : null;
    $data = explode("_", $token);
    $betTable = (new BusinessFlowModel())->getTables()[$data[1]]['bet_table'];
    $drawTable = (new BusinessFlowModel())->getTables()[$data[1]]['draw_table'];
    $result = (new BusinessFlowModel())->getTrackData($betTable, $data[0]) ?? [];
    echo json_encode($result);
}
