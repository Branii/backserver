<?php
// declare(strict_types=1);
// header('Content-Type: application/json');


$flag = isset($this->viewData['flag']) ? $this->viewData['flag'] : null;


if ($flag == "fetchfinance") {

    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = (new FinancialManageModel())->FinancialDataRecords($page, $limit) ?? [];
    echo json_encode([
        'finance' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}


if ($flag == "addmoney") {

    $depositetype = isset($this->viewData['depositetype']) ? (int) $this->viewData['depositetype'] : "";
    $uid = isset($this->viewData['uid']) ? (int) $this->viewData['uid'] :"";
    $amount = isset($this->viewData['amount']) ? (float)$this->viewData['amount'] : "";
    $review = isset($this->viewData['review']) ? $this->viewData['review'] : "";
    $result = (new FinancialManageModel())->addMoneyData($depositetype,$uid,$amount,$review,) ?? [];
    echo json_encode($result);
}



if ($flag == "fetchDeposit") {

    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = (new FinancialManageModel())->DepositDataRecords($page, $limit) ?? [];
    echo json_encode([
        'deposit' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}

if ($flag == "filterdeposit") {

     $uid = isset($this->viewData['uid']) ?  $this->viewData['uid'] : "";
     $usernameCheck = (new BusinessFlowModel())->getUserIdByUsername($uid);
    $states = isset($this->viewData['states']) ? (int) $this->viewData['states'] : "";
    $startdate = isset($this->viewData['startdate']) ? $this->viewData['startdate'] : "";
    $enddate = isset($this->viewData['enddate']) ?  $this->viewData['enddate'] : "";
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $Limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;

     if(!empty($usernameCheck) && $usernameCheck != null){
        $username = $usernameCheck[0]['uid'];
        $subquery = (new FinancialManageModel())->Depositsubquery($username,$states,$startdate,$enddate) ?? [];
        $result = (new FinancialManageModel())->FilterDepositData($subquery,$page,$Limit) ?? [];

        echo json_encode([
            'deposits' =>  $result['data'],
           'totalPages' => ceil($result['total'] / $Limit),
        ]);
       }else{

        $subquery = (new FinancialManageModel())->Depositsubquery($uid,$states,$startdate,$enddate) ?? [];
        $result = (new FinancialManageModel())->FilterDepositData($subquery,$page,$Limit) ?? [];

        echo json_encode([
            'deposits' => $result['data'],
            'totalPages' => ceil($result['total'] / $Limit),
        ]);
       }
      
}



if ($flag == "fetchwithdraw") {

    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = (new FinancialManageModel())->WithrawalDataRecords($page, $limit) ?? [];
    echo json_encode([
        'withdraw' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}



