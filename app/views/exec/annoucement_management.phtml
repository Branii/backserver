<?php
// ini_set("display_errors",1);

$flag = isset($this->viewData['flag']) ? $this->viewData['flag'] : null;

if($flag == "fetchmessage"){
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = AnnouncementModel::FetchAnnoucement($page, $limit) ?? [];
    echo json_encode([
        'messages' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}

if ($flag == "message") {
    // Get and sanitize input data
      $messagetype = isset($this->viewData['messagetype']) ? $this->viewData['messagetype'] : "";
      $messagetitle = isset($this->viewData['messagetitle']) ? htmlspecialchars(urldecode($this->viewData['messagetitle'])) : "";
      $usernames = isset($this->viewData['usernames']) ? $this->viewData['usernames'] : "";
      $description = isset($this->viewData['description']) ? urldecode($this->viewData['description']) : "";
      $startdate = isset($this->viewData['startdate']) ? $this->viewData['startdate'] : "";
      $enddate = isset($this->viewData['enddate']) ? $this->viewData['enddate'] : "";
      $sendby = isset($this->viewData['sendby']) ? urldecode($this->viewData['sendby']) : "";

    // Handle message sending based on message type
    if (empty($usernames)) { 
        if (in_array($messagetype, ["general", "personal"])) {
            // General or personal message
            $targetUser = ($messagetype === "general") ? 'All Users' : '';
            echo AnnouncementModel::GeneralMessage($messagetitle, $description, $sendby, $messagetype, $targetUser, $uid = 0);
        } elseif ($messagetype === "users") {
            // Specific users message
            $userUids = AnnouncementModel::SpecificUser();
            $targetUser = 'Specific Users';
            echo json_encode(AnnouncementModel::GeneralMessage($messagetitle, $description, $sendby, $messagetype, $targetUser, $userUids));
        } elseif ($messagetype === "new_users") {
        
            if (!empty($startdate)) {
             $userUids = AnnouncementModel::NewlyRegisteredUsers($startdate,$enddate);
             if(empty($userUids)){
                echo json_encode('No new users found in the specified date range.');
                exit;
             }
                $targetUser = 'new users';
                echo json_encode(AnnouncementModel::GeneralMessage($messagetitle, $description, $sendby, $messagetype, $targetUser, $userUids));
            } else {
                // Handle the case where dateranges is missing or invalid
                echo json_encode(['error' => 'Date range is required for new users']);
            }
        }
    } else {
        // Specific username(s) selected for message
        $userData = AnnouncementModel::getUsernameById($usernames);
        
        if ($userData) {
            if ($userData['reg_type'] == 'username') {
                $username = $userData['username'];
            } elseif ($userData['reg_type'] == 'contact') {
                $username = $userData['contact'];
            } else {
                $username = $userData['email'];
            }

            if (in_array($messagetype, ["general", "personal"])) {
                $targetUser = ($messagetype === "personal") ? $username : '';
                echo AnnouncementModel::GeneralMessage($messagetitle, $description, $sendby, $messagetype, $targetUser, $usernames);
            }
        } else {
            echo json_encode(['error' => 'User data not found for the given username']);
        }
    }
}


if($flag == "deleteannoucement"){
    $messageid = isset($this->viewData['messageid']) ? (int) $this->viewData['messageid'] : "";
    echo  (new AnnouncementModel())->DeleteAnnoucement($messageid);
}

if ($flag == "filtermessage") {
    $username = isset($this->viewData['username']) ?  $this->viewData['username'] : "";
    $messagetype = isset($this->viewData['messagestype']) ?  $this->viewData['messagestype'] : "";
    $startdate = isset($this->viewData['startdate']) ? $this->viewData['startdate'] : "";
    $enddate = isset($this->viewData['enddate']) ?  $this->viewData['enddate'] : "";
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $subquery = (new AnnouncementModel())->Messagesubquery($username,$messagetype,$startdate,$enddate) ?? [];
    $result = (new AnnouncementModel())->FilterMessageData($subquery,$page,$limit) ?? [];
    echo json_encode([
        'message' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit),
    ]);
}


if ($flag == "editannoucement") {
    $msgid = isset($this->viewData['msgid']) ?  $this->viewData['msgid'] : "";
    $result =  AnnouncementModel::EditMessageData($msgid);
    echo json_encode($result);
}

if ($flag == "updateannoucement") {
    $msgtitle =  urldecode(isset($this->viewData['msgtitle'])) ?   urldecode($this->viewData['msgtitle']) : "";
    $msgcontent = urldecode( isset($this->viewData['msgcontent'])) ?   urldecode($this->viewData['msgcontent']) : "";
    $msgid = isset($this->viewData['msgid']) ?  $this->viewData['msgid'] : "";
    $result =  AnnouncementModel::UpdateMessageData($msgtitle,$msgcontent,$msgid);
    echo json_encode($result);
}

if ($flag == "viewnotification") {
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $result = AnnouncementModel::FetchNotification($page, $limit) ?? [];
    echo json_encode([
        'notification' => $result['data'],  // Correct key
        'totalPages' => ceil($result['total'] / $limit),
    ]);

}


if ($flag == "filterusernotfys") {
    $username = isset($this->viewData['username']) ?  $this->viewData['username'] : "";
    $messagetype = isset($this->viewData['messagestype']) ?  $this->viewData['messagestype'] : "";
    $startdate = isset($this->viewData['startdate']) ? $this->viewData['startdate'] : "";
    $enddate = isset($this->viewData['enddate']) ?  $this->viewData['enddate'] : "";
    $page = isset($this->viewData['page']) ? (int) $this->viewData['page'] : 1;
    $limit = isset($this->viewData['limit']) ? (int) $this->viewData['limit'] : 20;
    $subquery = (new AnnouncementModel())->Notifyssubquery($username,$messagetype,$startdate,$enddate);
    $result = (new AnnouncementModel())->FilterNotifysData($subquery,$page,$limit);
    echo json_encode([
        'usermessage' => $result['data'],
        'totalPages' => ceil($result['total'] / $limit)
    ]);
}






